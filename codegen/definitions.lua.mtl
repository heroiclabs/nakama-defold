
--
-- Enums
--

{{#definitionslist}}
{{#has_enum}}
--- {{name}}
-- {{description}}
{{#enum}}
M.{{name_upper}}_{{.}} = "{{.}}"
{{/enum}}

{{/has_enum}}
{{/definitionslist}}

--
-- Objects
--

{{#definitionslist}}
{{#has_properties}}
--- {{name}}
-- {{description}}
{{#properties}}
-- @param {{name_lua}} ({{type_lua}}) {{description}}
{{/properties}}
function M.create_{{name}}({{property_names}})
	{{#properties}}
	assert(not {{name_lua}} or type({{name_lua}}) == "{{type_lua}}", "Argument '{{name_lua}}' must be 'nil' or of type '{{type_lua}}'")
	{{/properties}}
	return {
	{{#properties}}
		["{{name}}"] = {{name_lua}},
	{{/properties}}
	}
end

{{/has_properties}}
{{/definitionslist}}
