-- Code generated by codegen/generate-satori.py. DO NOT EDIT.

--[[--
The Satori client SDK for Defold.

@module satori
]]

local log = require "nakama.util.log"

local M = {}

-- helpers for parameter type checking
local function check_array(v) return type(v) == "table" end
local function check_string(v) return type(v) == "string" end
local function check_integer(v) return type(v) == "number" end
local function check_object(v) return type(v) == "table" end
local function check_boolean(v) return type(v) == "boolean" end

--- Create a Satori client instance.
-- @param config A table of configuration options.
-- config.host
-- config.port
-- @return Satori Client instance.
function M.create_client(config)
	assert(config, "You must provide a configuration")
	assert(config.host, "You must provide a host")
	assert(config.port, "You must provide a port")
	log("create_client()")

	local client = {}
	local scheme = config.use_ssl and "https" or "http"
	client.config = {}
	client.config.host = config.host
	client.config.port = config.port
	client.config.http_uri = ("%s://%s:%d"):format(scheme, config.host, config.port)

	local ignored_fns = { create_client = true, log = true }
	for name,fn in pairs(M) do
		if not ignored_fns[name] and type(fn) == "function" then
			log("setting " .. name)
			client[name] = function(...) return fn(client, ...) end
		end
	end

	return client
end

--
-- Satori REST API
--

%%definitions%%

%%paths%%

return M