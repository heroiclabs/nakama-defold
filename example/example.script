local nakama = require "nakama.nakama"
local log = require "nakama.util.log"
local defold = require "nakama.engine.defold"


local function email_login(client, email, password, username)
	local result = client.authenticate_email(email, password, nil, true, username)
	if result.token then
		client.set_bearer_token(result.token)
		return true
	end
	log("Unable to login")
	return false
end

local function device_login(client)
	local body = nakama.create_api_account_device(defold.uuid())
	local result = nakama.authenticate_device(body, true)
	if result.token then
		nakama.set_bearer_token(client, result.token)
		return true
	end
	local result = nakama.authenticate_device(client, body, false)
	if result.token then
		nakama.set_bearer_token(client, result.token)
		return true
	end
	log("Unable to login")
	return false
end

function init(self)
	log.print()
	
	local config = {
		host = "127.0.0.1",
		port = 7350,
		username = "defaultkey",
		password = "",
		engine = defold,
	}
	local client = nakama.create_client(config)
	
	nakama.sync(function()
		local ok = email_login(client, "bjorn@defold.se", "foobar123", "britzl")
		if not ok then
			return
		end
		local account = client.get_account()
		pprint(account)

		local socket = client.create_socket()
		socket.on_channel_message(function(message)
			pprint(message)
		end)
		socket.on_channel_presence_event(function(message)
			pprint(message)
		end)
		local ok, err = socket.connect()
		if not ok then
			log("Unable to connect: ", err)
			return
		end

		local channel_id = "pineapple-pizza-lovers-room"
		local target = channel_id
		local type = 1 -- 1 = room, 2 = Direct Message, 3 = Group
		local persistence = false
		local hidden = false
		local result = socket.channel_join(target, type, persistence, hidden)
		pprint(result)
	end)
end
